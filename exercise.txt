db.createCollection( "people" , { 
   validator: { $jsonSchema: { 
      bsonType: "object", 
      required: [ "name", "surname", "email" ], 
      properties: { 
         name: { 
            bsonType: "string", 
            description: "required and must be a string" }, 
         surname: { 
            bsonType: "string", 
            description: "required and must be a string" }, 
         email: { 
            bsonType: "string", 
            pattern: "^.+\@.+$", 
            description: "required and must be a valid email address" }, 
         year_of_birth: { 
            bsonType: "int", 
            minimum: 1900, 
            maximum: 2018,
            description: "the value must be in the range 1900-2018" }, 
         gender: { 
            enum: [ "M", "F" ], 
            description: "can be only M or F" } 
      }
   }
}})
------


db.createCollection( "people2" , {
   validator: {
     $jsonSchema: {
        bsonType: "object",
        additionalProperties: false,
 required: ["name","age"],
        properties: {
           _id : {
              bsonType: "objectId" },
           name: {
              bsonType: "string",
              description: "required and must be a string" },
           age: {
              bsonType: "int",
              minimum: 0,
              maximum: 100,
              description: "required and must be in the range 0-100" }
        }
     }
}})

-----


db.runCommand( { collMod: "people3", 
   validator: { 
      $jsonSchema : { 
         bsonType: "object", 
         required: [ "name", "surname", "gender" ], 
         properties: { 
            name: { 
               bsonType: "string", 
               description: "required and must be a string" }, 
            surname: { 
               bsonType: "string", 
               description: "required and must be a string" }, 
            gender: { 
               enum: [ "M", "F" ], 
               description: "required and must be M or F" } 
         }
       }
}, 
validationLevel: "moderate", 
validationAction: "warn" 
})
