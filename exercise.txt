


from passlib.context import CryptContext
pwd_context=CryptContext(schemes=["bcrypt"],deprecated="auto")



def hash(password:str):
    return pwd_context.hash(password)

-------------


from fastapi import FastAPI, HTTPException, Response, Depends, status, APIRouter
from sqlalchemy.orm import Session
 
from .. import models, schemas,utils
from .. database import engine, get_db

router = APIRouter(
    tags=["users"]
)


@router.post("/adduser", status_code=status.HTTP_201_CREATED,response_model=schemas.UserOut)
def addUser(user:schemas.UserCreate,db: Session=Depends(get_db)):
    hashed_password=utils.hash(user.password)
    user.password=hashed_password
    new_post=models.User(**user.dict())
    print(new_post)
    db.add(new_post)
    db.commit()
    db.refresh(new_post)
    return new_post
    
