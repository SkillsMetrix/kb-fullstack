import { ref } from "vue";
import axios from "axios";

export default function useStudent() {
  const url = "http://localhost:3000/students/";
  const studentData = ref([]);
  //get students data

  const getAllStudents = async () => {
    try {
      const res = await axios(url);
      console.log(res.data);
      studentData.value = res.data;
    } catch (error) {
      console.log(error);
    }
  };
  // get single data
  const getSingleStudent = async (id) => {
    studentData.value = [];
    try {
      const res = await axios(url + id);
      console.log(res.data);
      studentData.value = res.data;
    } catch (error) {
      console.log(error);
    }
  };
  //create student
  const createStudent = async (formData) => {
    studentData.value = [];
    try {
      const config = {
        method: 'POST',
        url: url,
        headers: {
          "Content-Type": "application/json",
        },
        data: JSON.stringify(formData),
      };
      const res = await axios(config);
      studentData.value=res.data
    } catch (error) {}
  };
  return {
    studentData,
    getAllStudents,
    getSingleStudent,
    createStudent
  };
}

--------------

<script setup>
import { reactive } from "vue";
import {RouterLink} from 'vue-router'
import useStudent from "../../composables/studentApi";
const {createStudent} =useStudent()
const formData = reactive({
  stuname: "",
  email: "",
});
const handleAddStudentForm = async () => {
  console.log("Form Submitted ", formData);
  await createStudent(formData)
  alert('data added')
 };

</script>

<template>
  <div class="shadow-md pb-6">
    <div class="bg-indigo-600 p-4">
      <h3 class="text-3xl font-bold text-center">Add Student</h3>
    </div>
    <form
      @submit.prevent="handleAddStudentForm"
      class="w-full"
      id="AddStudentForm"
    >
      <div class="flex items-center m-6">
        <div class="w-1/5">
          <label for="stuname" class="font-medium">Name:</label>
        </div>
        <div class="w-4/5">
          <input
            type="text"
            id="stuname"
            class="border-2 border-gray-200 w-full py-2 px-4"
            v-model.trim="formData.stuname"
            placeholder="Enter StudentName"
            required
          />
        </div>
      </div>

      <div class="flex items-center m-6">
        <div class="w-1/5">
          <label for="email" class="font-medium">Email:</label>
        </div>
        <div class="w-4/5">
          <input
            type="email"
            id="email"
            class="border-2 border-gray-200 w-full py-2 px-4"
             v-model.trim="formData.email"
            placeholder="Enter Email"
            required
          />
        </div>
      </div>
      <div class="m-8 flex justify-center">
        <button class="bg-purple-700 font-medium py-2 rounded-md px-6">Add</button>
      </div>

      <div class="m-8 flex justify-center">
        <RouterLink :to="{name:'list'}">
        <button
          type="button"
          class="bg-emerald-700 font-medium py-2 rounded-md px-6"
        >
          Back To Home
        </button>
    </RouterLink>
      </div>
    </form>
  </div>
</template>



<style scoped></style>


---------------

<template>
  <div class="shadow-md pb-6">
    <table class="table-auto w-full">
      <thead class="bg-slate-600 text-white">
        <tr>
          <th class="py-1">No</th>
          <th class="py-1">Name</th>
          <th class="py-1">Email</th>
        </tr>
      </thead>
      <tbody class="text-center">
        <tr>
          <td class="py-2">{{ studentData.id }}</td>
          <td class="py-2">{{ studentData.stuname }}</td>
          <td class="py-2">{{ studentData.email }}</td>
          <td class="py-2"></td>
        </tr>
      </tbody>
    </table>
    <div class="m-8 flex justify-center">
      <RouterLink :to="{ name: 'list' }">
        <button
          type="button"
          class="bg-emerald-700 font-medium py-2 rounded-md px-6"
        >
          Back To Home
        </button>
      </RouterLink>
    </div>
  </div>
</template>

<script setup>
import { RouterLink, useRoute } from "vue-router";
import useStudent from "../../composables/studentApi";
import { onMounted } from "vue";
const route = useRoute();
const { getSingleStudent, studentData } = useStudent();
onMounted(() => {
  getSingleStudent(route.params.id);
});
</script>

<style scoped></style>



-------------


<template>
  <div>
    <div class="bg-orange-600 p-4 grid grid-cols-9">
      <div class="col-span-6 md:col-span-8">
        <h1 class="text-3xl font-bold text-center mt-3 text-white">
          Student List
        </h1>
      </div>
      <div class="text-right">
        <RouterLink :to="{ name: 'add' }">
          <button
            class="text-md bg-green-700 hover:bg-green-800 font-medium rounded-lg p-2 px-6"
          >
            <UserPlusIcon /> Add
          </button>
        </RouterLink>
      </div>
    </div>

    <table class="table-auto w-full">
      <thead class="bg-slate-600 text-white">
        <tr>
          <th class="py-1">No</th>
          <th class="py-1">Name</th>
          <th class="py-1">Email</th>
          <th class="py-1">Action</th>
        </tr>
      </thead>
      <tbody class="text-center">
        <tr v-for="({ id, stuname, email }, i) in studentData" :key="id">
          <td class="py-2">{{ ++i }}</td>
          <td class="py-2">{{ stuname }}</td>
          <td class="py-2">{{ email }}</td>
          <td class="py-2">
            <RouterLink :to="{ name: 'view', params: { id: id } }">
              <EyeIcon class="text-blue-500 h-6 w-6 inline" />
            </RouterLink>
            <RouterLink :to="{ name: 'edit', params: { id: 1 } }">
              <PencilIcon class="text-emerald-500 h-6 mx-6 inline" />
            </RouterLink>
            <TrashIcon
              class="text-red h-6 w-6 inline"
              @click="deleteStudents(1)"
            />
          </td>
        </tr>
      </tbody>
    </table>
  </div>
</template>

<script setup>
import {
  EyeIcon,
  PencilIcon,
  TrashIcon,
  UserPlusIcon,
} from "@heroicons/vue/24/solid";
import { RouterLink } from "vue-router";
import useStudent from "../../composables/studentApi";
import { onMounted } from "vue";

const { getAllStudents, studentData } = useStudent();
onMounted(getAllStudents);

const deleteStudents = async (id) => {
  if (!window.confirm("Are you sure?")) {
    return;
  }
  console.log("Record Deleted ");
};
</script>

<style scoped></style>
